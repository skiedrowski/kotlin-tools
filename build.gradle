buildscript {
	ext.kotlin_version = '1.4.21'

	repositories {
		mavenCentral()
	}

	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}
}
plugins {
	id("maven-publish")
}

description = """collection (?) of kotlin-related tools"""

def buildscriptDir = "$rootProject.projectDir/buildscripts"

apply from: "$buildscriptDir/loadEnvironment.gradle"
apply from: "$buildscriptDir/printGradleInfo.gradle"
apply from: "$buildscriptDir/loadVersions.gradle"
apply from: "$buildscriptDir/jacocoMultimodule.gradle"

subprojects {
	apply plugin: 'kotlin'

	tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
		kotlinOptions {
			apiVersion = "1.4"
			languageVersion = "1.4"
			jvmTarget = "1.8"
			noReflect = true
			noStdlib = true
		}
	}

//	version = '20210222'
	version = 'NEXT-SNAPSHOT'
	group = "com.github.skiedrowski.tools"

	repositories {
		mavenCentral()
	}

	dependencies {
		compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

		testCompile "junit:junit:$ver.junit"
		testCompile "com.nhaarman:mockito-kotlin:$ver.mockito_kotlin"
		// kotlin-reflect is (just) used by mockito-kotlin
		testCompile "org.jetbrains.kotlin:kotlin-reflect"
		testCompile "com.natpryce:hamkrest:$ver.hamkrest"
		testCompile("org.mockito:mockito-core:$ver.mockito") {
			exclude group: "org.hamcrest"
		}
	}

	apply from: "$buildscriptDir/sourcesJar.gradle"
	apply from: "$buildscriptDir/testJar.gradle"
	apply from: "$buildscriptDir/javadocJar.gradle"

	test.maxParallelForks = Runtime.runtime.availableProcessors()

	apply from: "$buildscriptDir/ignoreTestFailuresIfConfiguredInEnv.gradle"
	apply from: "$buildscriptDir/mavenPublishGithubPackages.gradle"
}
apply from: "$buildscriptDir/fixJenkins.gradle"
apply from: "$buildscriptDir/wrapper.gradle"
